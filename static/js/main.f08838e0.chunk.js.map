{"version":3,"sources":["util/contrastRatio.js","util/hexToRbg.js","util/luminance.js","component/HexInput.js","component/ContrastAlert.js","App.js","reportWebVitals.js","index.js"],"names":["contrastRatio","l1","l2","toFixed","hexToRbg","hex","substring","length","split","map","char","join","parseInt","luminance","rgbArr","temp","value","sRGB","Math","pow","HexInput","labelText","field","initialColour","update","hexRegex6","hexRegex3","useState","fieldType","defaultColour","setDefault","colourInput","setColourInput","colour","setColour","err","setErr","useEffect","document","body","style","background","calcLuminance","getElementById","color","querySelector","borderColor","className","type","name","placeholder","maxLength","autoComplete","onChange","e","target","test","aria-label","ContrastAlert","ratio","breakpoint","textSize","fail","setFail","App","L1","setL1","L2","setL2","setRatio","id","val","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f08838e0.chunk.js","sourcesContent":["const contrastRatio = (l1, l2) => {\n  if (l1 > l2) {\n    return ((l1 + 0.05) / (l2 + 0.05)).toFixed(2);\n  }\n  return ((l2 + 0.05) / (l1 + 0.05)).toFixed(2);\n}\n\nexport default contrastRatio;\n","const hexToRbg = (hex) => {\n  hex = hex.substring(1);\n  if (hex.length === 3) {\n    hex = hex.split('')\n      .map((char) => char + char)\n      .join('');\n  }\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n  return [r, g, b];\n}\n\nexport default hexToRbg;\n","const luminance = (rgbArr) => {\n  const temp = rgbArr.map((value) => {\n    const sRGB = value / 255;\n    if (sRGB <= 0.03928) {\n      return sRGB / 12.92;\n    }\n      return Math.pow(((sRGB + 0.055) / 1.055), 2.4);\n  });\n  return 0.2126 * temp[0] + 0.7152 * temp[1] + 0.0722 * temp[2];\n}\n\nexport default luminance;\n","import React, {useState, useEffect} from 'react';\nimport hexToRbg from '../util/hexToRbg';\nimport calcLuminance from '../util/luminance';\n\nconst HexInput = ({ labelText, field, initialColour, update }) => {\n  const hexRegex6 = /^#[0-9A-F]{6}$/i;\n  const hexRegex3 = /^#([0-9a-f]{3}){1,2}$/i;\n\n  const [fieldType] = useState(field);\n  const [defaultColour, setDefault] = useState(initialColour);\n  const [colourInput, setColourInput] = useState(defaultColour);\n  const [colour, setColour] = useState(defaultColour);\n  const [err, setErr] = useState(false);\n\n  useEffect(() => {\n    if (fieldType === 'background') {\n      document.body.style.background = colour;\n      update(calcLuminance(hexToRbg(colour)));\n    }\n    else if (fieldType === 'foreground') {\n      document.getElementById('fg-heading').style.color = colour;\n      document.getElementById('fg-paragraph').style.color = colour;\n      document.querySelector('.text-demo').style.borderColor = colour;\n      update(calcLuminance(hexToRbg(colour)));\n    }\n  }, [colour, fieldType, update]);\n\n  const handleTextChange = (e) => {\n    setColourInput(e.target.value);\n    if (hexRegex6.test(e.target.value) || hexRegex3.test(e.target.value)) {\n      setErr(false);\n      setDefault(e.target.value);\n      setColour(e.target.value);\n    } else {\n      setErr(true);\n      setColour(defaultColour);\n    }\n  }\n\n  const handleColourChange = (e) => {\n    setDefault(e.target.value);\n    setColourInput(e.target.value);\n    setColour(e.target.value);\n    setErr(false);\n  }\n\n  return (\n    <div className=\"input-fields\">\n      <div className=\"text-field\">\n        <label>\n          {labelText}\n          <input\n            type=\"text\"\n            name=\"colour\"\n            placeholder=\"#hex\"\n            value={colourInput}\n            maxLength=\"7\"\n            className=\"text-input\"\n            autoComplete=\"off\"\n            onChange={handleTextChange}\n          />\n        </label>\n        {err ? <div className=\"error-message\">Invalid hex code!</div> : null}\n      </div>\n      <div className=\"colour-field\">\n        <input\n          className=\"colour-picker\"\n          type=\"color\"\n          value={colourInput}\n          onChange={handleColourChange}\n          aria-label={`colour-picker-for-${labelText}`}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default HexInput;\n","import React, { useState, useEffect } from 'react';\n\nconst ContrastAlert = ({ ratio, breakpoint, textSize }) => {\n  const [fail, setFail] = useState(false);\n\n  useEffect(() => {\n    ratio > breakpoint ? setFail(false) : setFail(true);\n  }, [breakpoint, ratio]);\n\n  return (\n    <>\n      {fail ? <div className=\"contrast-alert\">&#9888; {textSize}</div> : null}\n    </>\n  );\n}\n\nexport default ContrastAlert;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport contrastRatio from './util/contrastRatio';\nimport HexInput from './component/HexInput';\nimport ContrastAlert from './component/ContrastAlert';\n\nfunction App() {\n  const [L1, setL1] = useState(1);\n  const [L2, setL2] = useState(0);;\n  const [ratio, setRatio] = useState(contrastRatio(L1, L2));\n\n  const updateL1 = (val) => {\n    setL1(val);\n  }\n  const updateL2 = (val) => {\n    setL2(val);\n  }\n\n  useEffect(() => {\n    setRatio(contrastRatio(L1, L2))\n  }, [L1, L2]);\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div className=\"text-wrapper\">\n          <div className=\"text-demo\">\n            <h1 id=\"fg-heading\">Hello World</h1>\n            <p id=\"fg-paragraph\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque blandit consequat\n              congue. Donec eleifend laoreet turpis vel laoreet. Cras finibus tellus in dui euismod,\n              quis laoreet purus interdum. Donec vestibulum tincidunt odio, vel gravida justo ultrices in.\n              Vivamus sodales odio sit amet risus hendrerit, eu finibus mi viverra. Maecenas mollis felis\n              ante, ornare luctus nisl efficitur id. Curabitur eget nisl risus. Morbi non dapibus odio.\n              Morbi porta, erat a interdum tincidunt, dolor dolor laoreet nisi, in mattis ligula urna quis\n              ex.\n      </p>\n          </div>\n        </div>\n        <div className=\"contrast-wrapper\">\n          <div className=\"alert-wrapper\">\n            <ContrastAlert ratio={ratio} breakpoint={7} textSize=\"Normal text\" />\n            <ContrastAlert ratio={ratio} breakpoint={4.5} textSize=\"Big text\" />\n          </div>\n          <h1>Contrast Ratio: {ratio}</h1>\n        </div>\n        <div className=\"input-wrapper\">\n          <HexInput\n            labelText=\"text\"\n            field=\"foreground\"\n            initialColour=\"#000000\"\n            update={updateL1}\n          />\n          <HexInput\n            labelText=\"background\"\n            field=\"background\"\n            initialColour=\"#FFFFFF\"\n            update={updateL2}\n          />\n        </div>\n      </main>\n      <footer>\n        <p id=\"legend\">&#9888; = Failed WCAG AAA</p>\n        <p>\n          <a\n            href=\"https://www.w3.org/TR/WCAG20-TECHS/G17#G17-procedure\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"footer-link\"\n          >\n            calculations based on W3C\n          </a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}